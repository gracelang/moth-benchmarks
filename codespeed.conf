# -*- mode: yaml -*-
# Config file for ReBench
standard_experiment: all
standard_data_file: 'benchmark.data'

statistics:
    confidence_level: 0.95

runs:
    number_of_data_points: 1

quick_runs:
    number_of_data_points: 1
    max_time: 1200   # time in seconds

moth_benchmarks:
    iteration_numbers:
        fast_vm:      &FAST_VM      1000
        typing_vm:    &TYPING_VM    1000

# definition of benchmark suites
benchmark_suites:

    java-awfy-steady:
        gauge_adapter: RebenchLog
        command: " -cp ../benchmarks/Java/benchmarks.jar Harness %(benchmark)s %(variable)s "
        variable_values: *FAST_VM
        max_runtime: 1800
        benchmarks: &AWFY_BENCHMARKS
            - DeltaBlue:
                extra_args: 12000
                codespeed_name: "[peak] DeltaBlue"
            - Richards:
                extra_args: 100
                codespeed_name: "[peak] Richards"
            - Json:
                extra_args: 100
                codespeed_name: "[peak] Json"
            - CD:
                extra_args: 250
                codespeed_name: "[peak] CD"
            - Havlak:
                extra_args: 1500
                codespeed_name: "[peak] Havlak"
            
            - Bounce:
                extra_args: 1500
                codespeed_name: "[peak] Bounce"
            - List:
                extra_args: 1500
                codespeed_name: "[peak] List"
            - Mandelbrot:
                extra_args: 500
                codespeed_name: "[peak] Mandelbrot"
            - NBody:
                extra_args: 250000
                codespeed_name: "[peak] NBody"
            - Permute:
                extra_args: 1000
                codespeed_name: "[peak] Permute"
            - Queens:
                extra_args: 1000
                codespeed_name: "[peak] Queens"
            - Sieve:
                extra_args: 3000
                codespeed_name: "[peak] Sieve"
            - Storage:
                extra_args: 1000
                codespeed_name: "[peak] Storage"
            - Towers:
                extra_args: 600
                codespeed_name: "[peak] Towers"

    java-awfy-interp:
        gauge_adapter: RebenchLog
        command: " -cp ../benchmarks/Java/benchmarks.jar Harness %(benchmark)s %(variable)s "
        variable_values: 25
        max_runtime: 1800
        benchmarks: *AWFY_BENCHMARKS

    node-awfy-steady:
        gauge_adapter: RebenchLog
        location: benchmarks/JavaScript
        command: "harness.js %(benchmark)s %(variable)s "
        variable_values: *FAST_VM
        max_runtime: 1800
        benchmarks: *AWFY_BENCHMARKS
    
    moth-awfy-steady:
        gauge_adapter: RebenchLog
        command: "harness.grace %(benchmark)s.grace %(variable)s "
        location: benchmarks/Moth
        variable_values: *FAST_VM
        max_runtime: 1800
        benchmarks: *AWFY_BENCHMARKS
    
    somns-awfy-steady:
        gauge_adapter: RebenchLog
        command: " Harness.ns %(benchmark)s %(variable)s "
        location: benchmarks/SOMns
        variable_values: *FAST_VM
        max_runtime: 1800
        benchmarks: *AWFY_BENCHMARKS
        
    higgs-awfy-steady:
        gauge_adapter: RebenchLog
        location: implementations/Higgs
        command: " ../../../benchmarks/JavaScriptPure/benchmark.js ../../../benchmarks/JavaScriptPure/harness.js ../../../benchmarks/JavaScriptPure/som.js ../../../benchmarks/JavaScriptPure/%(benchmark)s.js "
        # defined in the benchmarks, set to 100
        # variable_values: *FAST_VM
        max_runtime: 1800
        benchmarks: *AWFY_BENCHMARKS

    moth-typing-steady:
        gauge_adapter: RebenchLog
        command: "harness.grace %(benchmark)s.grace %(variable)s "
        location: benchmarks/Moth
        variable_values: *TYPING_VM
        max_runtime: 1800
        benchmarks: &TYPING_BENCHMARKS
            - Snake:
                extra_args: 2000
                codespeed_name: "peak.Snake"
            - Fannkuch:
                extra_args: 10
                codespeed_name: "peak.Fannkuch"
            - PyStone:
                extra_args: 200000
                codespeed_name: "peak.PyStone"
            - Float:
                extra_args: 1000000
                codespeed_name: "peak.Float"
            - Go:
                extra_args: 1000
                codespeed_name: "peak.Go"
            - SpectralNorm:
                extra_args: 500
                codespeed_name: "peak.SpectralNorm"
            - GraphSearch:
                extra_args: 20
                codespeed_name: "peak.GraphSearch"



# VMs have a name and are specified by a path and the binary to be executed
virtual_machines:

    Java:
        path: implementations
        build: ./build-java.sh
        binary: ./Java.sh

    JavaInt:
        path: implementations
        build: ./build-java.sh
        binary: ./Java.sh
        args: -Xint

    Node:
        path: implementations
        binary: ./Node.sh
    
    Moth:
        path: implementations
        build: ./build-moth.sh
        binary: ./Moth.sh
        args: " -EG "

    MothTyped:
        path: implementations
        build: ./build-moth.sh
        binary: ./Moth.sh
        args: " -EG -tc "

    SOMns:
        path: implementations
        build: ./build-somns.sh
        binary: SOMns.sh
        args: " -EG "

    Higgs:
        path: implementations
        build: ./build-higgs.sh
        binary: ./Higgs.sh


experiments:
    interp:
        executions:
          - JavaInt:
               benchmark:
                    - java-awfy-interp
    steady:
        executions:
            - Java:
                benchmark:
                    - java-awfy-steady
            - Node:
                benchmark:
                    - node-awfy-steady
            - SOMns:
                benchmark: 
                    - somns-awfy-steady
            - Moth:
                benchmark: 
                    - moth-awfy-steady
            - MothTyped:
                benchmark: 
                    - moth-awfy-steady
            - Higgs:
                benchmark: 
                    - higgs-awfy-steady
    typing:
        executions:
            - MothTyped:
                benchmark:
                    - moth-typing-steady
            - Moth:
                benchmark: 
                    - moth-typing-steady
